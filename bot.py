import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

TOKEN = "7889104731:AAGN2YRqTNZpdZlfylwQhNQmycPfQCCnwo0"  # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç BotFather
GROUP_ID = "1155525830"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∞–¥—Ä–µ—Å–∞—Ç–∞
sections = {
    "0": "–£—á–µ–±–Ω–∞—è —á–∞—Å—Ç—å",
    "1": "–•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å",
    "2": "–°—Ç–æ–ª–æ–≤–∞—è",
    "3": "–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å"
}

subcategories = {
    "0": {
        "0": "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π",
        "1": "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏",
        "2": "–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è",
        "3": "–≠–∫–∑–∞–º–µ–Ω—ã –∏ –∑–∞—á—ë—Ç—ã",
        "4": "–î—Ä—É–≥–æ–µ"
    },
    "1": {
        "0": "–ü–æ–ª–æ–º–∫–∏ –∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏",
        "1": "–û—Å–≤–µ—â–µ–Ω–∏–µ –∏ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ",
        "2": "–ú–µ–±–µ–ª—å –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
        "3": "–î—Ä—É–≥–æ–µ"
    },
    "2": {
        "0": "–ö–∞—á–µ—Å—Ç–≤–æ –µ–¥—ã",
        "1": "–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∏ –º–µ–Ω—é",
        "2": "–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ",
        "3": "–î—Ä—É–≥–æ–µ"
    },
    "3": {
        "0": "–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
        "1": "–í–Ω–µ—É—Ä–æ—á–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
        "2": "–ü–æ—Å–µ—â–µ–Ω–∏–µ –∏ –ø—Ä–æ–ø—É—Å–∫–∏",
        "3": "–î—Ä—É–≥–æ–µ"
    }
}

topic_ids = {
    "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π": 101,
    "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏": 102,
    "–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è": 103,
    "–≠–∫–∑–∞–º–µ–Ω—ã –∏ –∑–∞—á—ë—Ç—ã": 104,
    "–î—Ä—É–≥–æ–µ": 105,
    "–ü–æ–ª–æ–º–∫–∏ –∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏": 201,
    "–û—Å–≤–µ—â–µ–Ω–∏–µ –∏ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ": 202,
    "–ú–µ–±–µ–ª—å –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ": 203,
    "–ö–∞—á–µ—Å—Ç–≤–æ –µ–¥—ã": 301,
    "–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∏ –º–µ–Ω—é": 302,
    "–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ": 303,
    "–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ": 401,
    "–í–Ω–µ—É—Ä–æ—á–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è": 402,
    "–ü–æ—Å–µ—â–µ–Ω–∏–µ –∏ –ø—Ä–æ–ø—É—Å–∫–∏": 403
}

user_states = {}

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    keyboard = InlineKeyboardBuilder()
    for key, value in sections.items():
        keyboard.button(text=f"{key} - {value}", callback_data=f"section_{key}")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥—Ä–µ—Å–∞—Ç–∞:", reply_markup=keyboard.as_markup())

@dp.callback_query()
async def process_section(callback: types.CallbackQuery):
    section_id = callback.data.replace("section_", "")
    user_states[callback.from_user.id] = {"section": section_id}
    keyboard = InlineKeyboardBuilder()
    for key, value in subcategories[section_id].items():
        keyboard.button(text=f"{key} - {value}", callback_data=f"sub_{key}")
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=keyboard.as_markup())

@dp.callback_query()
async def process_subcategory(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    section_id = user_states[user_id]["section"]
    subcat_id = callback.data.replace("sub_", "")
    subcat = subcategories[section_id][subcat_id]
    user_states[user_id]["subcategory"] = subcat
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")

@dp.message()
async def process_message(message: types.Message):
    user_id = message.from_user.id
    if user_id in user_states and "subcategory" in user_states[user_id]:
        subcat = user_states[user_id]["subcategory"]
        topic_id = topic_ids.get(subcat, None)
        if topic_id:
            text = f"üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ *{subcat}*:\n{message.text}"
            await bot.send_message(GROUP_ID, text, message_thread_id=topic_id, parse_mode="Markdown")
            await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
            del user_states[user_id]
        else:
            await message.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–º—É.")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
